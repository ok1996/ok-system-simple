{
	"info": {
		"_postman_id": "507febdc-4f73-4248-b357-5d06cd5dc01a",
		"name": "simple",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20291128"
	},
	"item": [
		{
			"name": "simple-demo-datasource",
			"item": [
				{
					"name": "[simple-demo-datasource]Api-新增",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"content\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoDatasourcePortHost}}/datasource/api",
							"host": [
								"{{Host}}{{DemoDatasourcePortHost}}"
							],
							"path": [
								"datasource",
								"api"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-datasource]Api-查询-列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoDatasourcePortHost}}/datasource/api/list",
							"host": [
								"{{Host}}{{DemoDatasourcePortHost}}"
							],
							"path": [
								"datasource",
								"api",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-datasource]Api-查询-分页",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,并设置datasourceTestId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.collectionVariables.set(\"datasourceTestId\", jsonData.data.records[0].id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pageNum\": 1,\r\n  \"pageSize\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoDatasourcePortHost}}/datasource/api/page",
							"host": [
								"{{Host}}{{DemoDatasourcePortHost}}"
							],
							"path": [
								"datasource",
								"api",
								"page"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-datasource]Api-更新-Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{datasourceTestId}},\r\n  \"content\": \"666\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoDatasourcePortHost}}/datasource/api/{{datasourceTestId}}",
							"host": [
								"{{Host}}{{DemoDatasourcePortHost}}"
							],
							"path": [
								"datasource",
								"api",
								"{{datasourceTestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-datasource]Api-查询-单个",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoDatasourcePortHost}}/datasource/api/{{datasourceTestId}}",
							"host": [
								"{{Host}}{{DemoDatasourcePortHost}}"
							],
							"path": [
								"datasource",
								"api",
								"{{datasourceTestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-datasource]Api-删除",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"测试返回结果数据是否删除成功\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoDatasourcePortHost}}/datasource/api/{{datasourceTestId}}",
							"host": [
								"{{Host}}{{DemoDatasourcePortHost}}"
							],
							"path": [
								"datasource",
								"api",
								"{{datasourceTestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-socket",
			"item": [
				{
					"name": "页面1连接工程1的socket ：http://localhost:12010?room=1001&token=1001 页面2连接工程2的socket ：http://localhost:12020?room=1002",
					"item": []
				},
				{
					"name": "页面3连接工程1的socket ：http://localhost:12010?room=1003&token=1003&applicationName=simple-demo-socket-two   页面4连接工程2的socket ：http://localhost:12020?applicationName=simple-demo-socket-one",
					"item": []
				},
				{
					"name": "[simple-demo-socket-one]仅发送带群聊Room连接的客户端",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoSocketOne}}/message/room?message=接口调用工程1发送消息，room=1001应接收到数据&eventName=123&room=1001",
							"host": [
								"{{Host}}{{DemoSocketOne}}"
							],
							"path": [
								"message",
								"room"
							],
							"query": [
								{
									"key": "message",
									"value": "接口调用工程1发送消息，room=1001应接收到数据"
								},
								{
									"key": "eventName",
									"value": "123"
								},
								{
									"key": "room",
									"value": "1001"
								}
							]
						},
						"description": "接口调用工程1 发送消息以下消息，则页面1接收到数据"
					},
					"response": []
				},
				{
					"name": "[simple-demo-socket-one]仅发送带群聊Room连接的客户端",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoSocketOne}}/message/room?message=接口调用工程2发送消息，room=1002应接收到数据&eventName=123&room=1002",
							"host": [
								"{{Host}}{{DemoSocketOne}}"
							],
							"path": [
								"message",
								"room"
							],
							"query": [
								{
									"key": "message",
									"value": "接口调用工程2发送消息，room=1002应接收到数据"
								},
								{
									"key": "eventName",
									"value": "123"
								},
								{
									"key": "room",
									"value": "1002"
								}
							]
						},
						"description": "接口调用工程1 发送消息以下消息，则页面1接收到数据"
					},
					"response": []
				},
				{
					"name": "[simple-demo-socket-one]广播所有连接客户端",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoSocketOne}}/message/broadcast?message=接口调用工程1发送广播，则所有页面接收到数据",
							"host": [
								"{{Host}}{{DemoSocketOne}}"
							],
							"path": [
								"message",
								"broadcast"
							],
							"query": [
								{
									"key": "message",
									"value": "接口调用工程1发送广播，则所有页面接收到数据"
								}
							]
						},
						"description": "接口调用工程1 发送消息以下消息，则页面1接收到数据"
					},
					"response": []
				},
				{
					"name": "[simple-demo-socket-one]发送带指定微服务连接的客户端",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoSocketOne}}/message/service?message=本消息为simple-demo-socket-one发送，连接one应接收到数据",
							"host": [
								"{{Host}}{{DemoSocketOne}}"
							],
							"path": [
								"message",
								"service"
							],
							"query": [
								{
									"key": "message",
									"value": "本消息为simple-demo-socket-one发送，连接one应接收到数据"
								}
							]
						},
						"description": "接口调用工程1 发送消息以下消息，则页面1接收到数据"
					},
					"response": []
				},
				{
					"name": "[simple-demo-socket-two]发送带指定微服务连接的客户端",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoSocketTwo}}/message/service?message=本消息为simple-demo-socket-two发送，连接two应接收到数据",
							"host": [
								"{{Host}}{{DemoSocketTwo}}"
							],
							"path": [
								"message",
								"service"
							],
							"query": [
								{
									"key": "message",
									"value": "本消息为simple-demo-socket-two发送，连接two应接收到数据"
								}
							]
						},
						"description": "接口调用工程1 发送消息以下消息，则页面1接收到数据"
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-grpc",
			"item": [
				{
					"name": "[simple-demo-grpc-client]往Person服务端发送消息",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回data是否符合要求\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"     pm.expect(jsonData.data).to.eql(\"GrpcPersonService Hello ==> test\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoGrpcClient}}/message/sendPerson?message=test",
							"host": [
								"{{Host}}{{DemoGrpcClient}}"
							],
							"path": [
								"message",
								"sendPerson"
							],
							"query": [
								{
									"key": "message",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-grpc-client]往Hello服务端发送消息",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回data是否符合要求\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"     pm.expect(jsonData.data).to.eql(\"GrpcHelloService Hello ==> test\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoGrpcClient}}/message/sendHello?message=test",
							"host": [
								"{{Host}}{{DemoGrpcClient}}"
							],
							"path": [
								"message",
								"sendHello"
							],
							"query": [
								{
									"key": "message",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-dict",
			"item": [
				{
					"name": "[simple-demo-dict]测试单体-嵌套-默认实现类的json文件调用字典",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回data是否符合要求\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data.isLeaderText).to.eql(\"领导\");\r",
									"    pm.expect(jsonData.data.personVo.sexText).to.eql(\"女\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoDict}}/dictJson/superPerson",
							"host": [
								"{{Host}}{{DemoDict}}"
							],
							"path": [
								"dictJson",
								"superPerson"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-dict]测试列表-嵌套-默认实现类的json文件调用字典",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回data是否符合要求\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data[0].isLeaderText).to.eql(\"领导\");\r",
									"    pm.expect(jsonData.data[0].personVo.sexText).to.eql(\"女\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoDict}}/dictJson/superPersonList",
							"host": [
								"{{Host}}{{DemoDict}}"
							],
							"path": [
								"dictJson",
								"superPersonList"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-dict]测试单体-默认实现类的json文件调用字典",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回data是否符合要求\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data.sexText).to.eql(\"女\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoDict}}/dictJson/person",
							"host": [
								"{{Host}}{{DemoDict}}"
							],
							"path": [
								"dictJson",
								"person"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-dict]测试列表-默认实现类的json文件调用字典",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回data是否符合要求\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data[0].sexText).to.eql(\"女\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoDict}}/dictJson/personList",
							"host": [
								"{{Host}}{{DemoDict}}"
							],
							"path": [
								"dictJson",
								"personList"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-dict]测试单体-远程调用接口实现类",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回data是否符合要求\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data.idCardText).to.eql(\"护照\");\r",
									"    pm.expect(jsonData.data.hideIdentityText).to.eql(\"普通人\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoDict}}/dictCustom/personRemoteVo",
							"host": [
								"{{Host}}{{DemoDict}}"
							],
							"path": [
								"dictCustom",
								"personRemoteVo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-cloud",
			"item": [
				{
					"name": "[simple-demo-cloud]你好",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回字符串是否正常\", function () {\r",
									"    pm.response.to.have.body(\"hello world\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoCloud}}/hello/world",
							"host": [
								"{{Host}}{{DemoCloud}}"
							],
							"path": [
								"hello",
								"world"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-gateway",
			"item": [
				{
					"name": "[simple-demo-gateway]你好",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回字符串是否正常\", function () {\r",
									"    pm.response.to.have.body(\"hello world\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoGateway}}/simple-demo-cloud/hello/world",
							"host": [
								"{{Host}}{{DemoGateway}}"
							],
							"path": [
								"simple-demo-cloud",
								"hello",
								"world"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-boot",
			"item": [
				{
					"name": "[simple-demo-boot]你好",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回字符串是否正常\", function () {\r",
									"    pm.response.to.have.body(\"hello world\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoBoot}}/hello/world",
							"host": [
								"{{Host}}{{DemoBoot}}"
							],
							"path": [
								"hello",
								"world"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-freemarker",
			"item": [
				{
					"name": "[simple-demo-freemarker]首页",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoFreemarker}}/index",
							"host": [
								"{{Host}}{{DemoFreemarker}}"
							],
							"path": [
								"index"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-redisson",
			"item": [
				{
					"name": "需并发压测-使用其他并发工具",
					"item": [
						{
							"name": "[simple-demo-redisson]分布式锁-测试请求-库存自减（观察后台日志输出，若输出/lock/decrement库存按序减少则正常）",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"测试返回结果code是否为200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Host}}{{DemoRedisson}}/lock/decrement",
									"host": [
										"{{Host}}{{DemoRedisson}}"
									],
									"path": [
										"lock",
										"decrement"
									]
								}
							},
							"response": []
						},
						{
							"name": "[simple-demo-redisson]分布式锁-测试请求-库存自减-TryLock（观察后台日志输出，若输出/lock/decrementTryLock库存按序减少则正常）",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"测试返回结果code是否为200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Host}}{{DemoRedisson}}/lock/decrementTryLock",
									"host": [
										"{{Host}}{{DemoRedisson}}"
									],
									"path": [
										"lock",
										"decrementTryLock"
									]
								}
							},
							"response": []
						},
						{
							"name": "[simple-demo-redisson]分布式锁-测试请求-库存自减-未加锁（观察后台日志输出，若输出/lock/decrementNotLock库存乱序减少则正常）",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"测试返回结果code是否为200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Host}}{{DemoRedisson}}/lock/decrementNotLock",
									"host": [
										"{{Host}}{{DemoRedisson}}"
									],
									"path": [
										"lock",
										"decrementNotLock"
									]
								}
							},
							"response": []
						},
						{
							"name": "[simple-demo-redisson]分布式锁-注解模式-测试请求（观察后台日志输出，若输出/annotationLock/decrement库存按序减少则正常）",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"测试返回结果code是否为200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Host}}{{DemoRedisson}}/annotationLock/decrement",
									"host": [
										"{{Host}}{{DemoRedisson}}"
									],
									"path": [
										"annotationLock",
										"decrement"
									]
								}
							},
							"response": []
						},
						{
							"name": "[simple-demo-redisson]分布式幂等-注解模式-测试请求（观察后台日志输出，若输出/annotationIdempotent/decrement库存按序减少则正常）",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"测试返回结果code是否为200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Host}}{{DemoRedisson}}/annotationIdempotent/decrement",
									"host": [
										"{{Host}}{{DemoRedisson}}"
									],
									"path": [
										"annotationIdempotent",
										"decrement"
									]
								}
							},
							"response": []
						},
						{
							"name": "[simple-demo-redisson]分布式幂等-注解模式-测试请求-请求参数变量--在业务执行结束后解锁（观察后台日志输出，若输出/annotationIdempotent/decrementReqPara库存按序减少则正常）",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"测试返回结果code是否为200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Host}}{{DemoRedisson}}/annotationIdempotent/decrementReqPara?keyName=cda6666",
									"host": [
										"{{Host}}{{DemoRedisson}}"
									],
									"path": [
										"annotationIdempotent",
										"decrementReqPara"
									],
									"query": [
										{
											"key": "keyName",
											"value": "cda6666"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "循环调用测试",
					"item": [
						{
							"name": "[simple-demo-redisson]分布式幂等-注解模式-测试请求-请求参数变量-等待expireTime过期后自动解锁（查看后台日志===/annotationIdempotent/decrementReqPara/executionFinishedUnlock，每5秒则正常一次）",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"测试返回结果code是否为200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.code).to.eql(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Host}}{{DemoRedisson}}/annotationIdempotent/decrementReqPara/executionFinishedUnlock?keyName=cda7777",
									"host": [
										"{{Host}}{{DemoRedisson}}"
									],
									"path": [
										"annotationIdempotent",
										"decrementReqPara",
										"executionFinishedUnlock"
									],
									"query": [
										{
											"key": "keyName",
											"value": "cda7777"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-Object-保存",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/object/Object001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"object",
								"Object001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-Object-获取",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回数据是否正确\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data.name).to.eql(\"2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/object/Object001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"object",
								"Object001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-Map-保存",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/map/Map001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"map",
								"Map001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-Map-获取",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回数据是否正确\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data.Map001.name).to.eql(\"2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/map/Map001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"map",
								"Map001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-List-保存",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"name\": \"2\",\r\n    \"remark\": \"2\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/list/List001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"list",
								"List001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-List-获取",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,返回数据是否正确\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data[0].name).to.eql(\"2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"2\",\r\n  \"remark\": \"2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/list/List001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"list",
								"List001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-删除",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/Object001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"Object001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-删除",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/Map001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"Map001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存的常用操作-删除",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cache/List001",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cache",
								"List001"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-redisson]缓存注解测试使用cacheName（观察后台日志输出，若只输出2次testAnnotateTestCacheName则正常）",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoRedisson}}/cacheable/annotateTestCacheName?keyName=testAnnotateTestCacheName&cycles=10",
							"host": [
								"{{Host}}{{DemoRedisson}}"
							],
							"path": [
								"cacheable",
								"annotateTestCacheName"
							],
							"query": [
								{
									"key": "keyName",
									"value": "testAnnotateTestCacheName",
									"description": "观察后台日志输出，若只输出2次则正常"
								},
								{
									"key": "cycles",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-email",
			"item": [
				{
					"name": "[simple-demo-email]邮件发送测试,查收邮件验证是否正常",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoEmail}}/email/sendEmail?toEmails=1105735250@qq.com&ccEmails=wzh29@vip.qq.com,ok96@foxmail.com&subject=zhuti&content=enirong&isHtml=false",
							"host": [
								"{{Host}}{{DemoEmail}}"
							],
							"path": [
								"email",
								"sendEmail"
							],
							"query": [
								{
									"key": "toEmails",
									"value": "1105735250@qq.com"
								},
								{
									"key": "ccEmails",
									"value": "wzh29@vip.qq.com,ok96@foxmail.com"
								},
								{
									"key": "subject",
									"value": "zhuti"
								},
								{
									"key": "content",
									"value": "enirong"
								},
								{
									"key": "isHtml",
									"value": "false"
								},
								{
									"key": "attachments",
									"value": "E:\\temp\\test.txt",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-base-param-service",
			"item": [
				{
					"name": "[demo-base-param]新增",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"moduleNames\": [\r\n    \"demo\",\r\n    \"test\"\r\n  ],\r\n  \"paramKey\": \"cea\",\r\n  \"codeValues\": [\r\n    {\r\n      \"code\": \"age\",\r\n      \"value\": 100\r\n    },\r\n    {\r\n      \"code\": \"sex\",\r\n      \"value\": \"女性\"\r\n    }\r\n  ],\r\n  \"remark\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{BaseParamService}}/simple-base-param-service/param",
							"host": [
								"{{Host}}{{BaseParamService}}"
							],
							"path": [
								"simple-base-param-service",
								"param"
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-param]修改",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{baseParamTestId}},\r\n  \"moduleNames\": [\r\n    \"demo\",\r\n    \"test\"\r\n  ],\r\n  \"paramKey\": \"qwww\",\r\n  \"codeValues\": [\r\n    {\r\n      \"code\": \"age\",\r\n      \"value\": 100\r\n    },\r\n    {\r\n      \"code\": \"sex\",\r\n      \"value\": \"女性\"\r\n    }\r\n  ],\r\n  \"remark\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{BaseParamService}}/simple-base-param-service/param",
							"host": [
								"{{Host}}{{BaseParamService}}"
							],
							"path": [
								"simple-base-param-service",
								"param"
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-param]Api-查询-列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{BaseParamService}}/simple-base-param-service/param/api/list",
							"host": [
								"{{Host}}{{BaseParamService}}"
							],
							"path": [
								"simple-base-param-service",
								"param",
								"api",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-param]Api-查询-分页",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,并设置baseParamTestId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.collectionVariables.set(\"baseParamTestId\", jsonData.data.records[1].id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pageNum\": 1,\r\n  \"pageSize\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{BaseParamService}}/simple-base-param-service/param/api/page",
							"host": [
								"{{Host}}{{BaseParamService}}"
							],
							"path": [
								"simple-base-param-service",
								"param",
								"api",
								"page"
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-param]Api-查询-单个",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{BaseParamService}}/simple-base-param-service/param/api/{{baseParamTestId}}",
							"host": [
								"{{Host}}{{BaseParamService}}"
							],
							"path": [
								"simple-base-param-service",
								"param",
								"api",
								"{{baseParamTestId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-param]Api-删除",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									"pm.test(\"测试返回结果数据是否删除成功\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{Host}}{{BaseParamService}}/simple-base-param-service/param/api/{{baseParamTestId}}",
							"host": [
								"{{Host}}{{BaseParamService}}"
							],
							"path": [
								"simple-base-param-service",
								"param",
								"api",
								"{{baseParamTestId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "demo-base-param",
			"item": [
				{
					"name": "[demo-base-param]获取同班同学列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{BaseParam}}/test/classmateList",
							"host": [
								"{{Host}}{{BaseParam}}"
							],
							"path": [
								"test",
								"classmateList"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "demo-base-s3",
			"item": [
				{
					"name": "[demo-base-s3]创建存储桶",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/bucket?bucketName=imtest001",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"bucket"
							],
							"query": [
								{
									"key": "bucketName",
									"value": "imtest001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-s3]获取存储桶列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,判断返回数据是否正确\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data[0].name).to.eql(\"imtest001\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/bucket/list?bucketName=imtest001",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"bucket",
								"list"
							],
							"query": [
								{
									"key": "bucketName",
									"value": "imtest001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-s3]上传文件-返回文件key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,并设置S3FileId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.collectionVariables.set(\"S3FileId\", jsonData.data);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/d:/Pictures/7.jpg"
								}
							]
						},
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/object/upload?bucketName=imtest001&fileExtension=jpg",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"object",
								"upload"
							],
							"query": [
								{
									"key": "bucketName",
									"value": "imtest001"
								},
								{
									"key": "fileExtension",
									"value": "jpg"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-s3]上传文件-返回文件key-用于分页",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,并设置S3FileId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.collectionVariables.set(\"S3FileId\", jsonData.data);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/d:/Pictures/00042d4e1ff744ccafc6a569ce8d1c35.jpg"
								}
							]
						},
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/object/upload?bucketName=imtest001&fileExtension=jpg",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"object",
								"upload"
							],
							"query": [
								{
									"key": "bucketName",
									"value": "imtest001"
								},
								{
									"key": "fileExtension",
									"value": "jpg"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-s3]生成带有预签名的URL，用于私有S3对象的访问",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/object/url?bucketName=imtest001&key={{S3FileId}}",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"object",
								"url"
							],
							"query": [
								{
									"key": "bucketName",
									"value": "imtest001"
								},
								{
									"key": "key",
									"value": "{{S3FileId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-s3]获取文件列表-首页",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,并设置下一页的参数\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.collectionVariables.set(\"S3NextPageParam\",JSON.stringify(jsonData.data.objectListing));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"bucketName\": \"imtest001\",\r\n  \"pageSize\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/object",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"object"
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-s3]获取文件列表-下一页",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,并设置下一页的参数\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.collectionVariables.set(\"S3NextPageParam\", jsonData.data.objectListing);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{S3NextPageParam}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/object/Next",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"object",
								"Next"
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-s3]删除文件",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,并设置S3FileId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/object?bucketName=imtest001&key={{S3FileId}}",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"object"
							],
							"query": [
								{
									"key": "bucketName",
									"value": "imtest001"
								},
								{
									"key": "key",
									"value": "{{S3FileId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[demo-base-s3]删除存储桶",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,并设置S3FileId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{Host}}{{BaseS3}}/storage/bucket?bucketName=imtest001",
							"host": [
								"{{Host}}{{BaseS3}}"
							],
							"path": [
								"storage",
								"bucket"
							],
							"query": [
								{
									"key": "bucketName",
									"value": "imtest001"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "simple-demo-encrypt",
			"item": [
				{
					"name": "[simple-demo-encrypt]脱敏测试模块-测试单体-嵌套",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,数据是否正常\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data.personVo.name).to.eql(\"*三\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoEncrypt}}/test/superPerson",
							"host": [
								"{{Host}}{{DemoEncrypt}}"
							],
							"path": [
								"test",
								"superPerson"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-encrypt]脱敏测试模块-测试列表-嵌套",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,数据是否正常\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data[0].personVo.name).to.eql(\"*三\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoEncrypt}}/test/superPersonList",
							"host": [
								"{{Host}}{{DemoEncrypt}}"
							],
							"path": [
								"test",
								"superPersonList"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-encrypt]脱敏测试模块-测试单体",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,数据是否正常\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data.name).to.eql(\"*三\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoEncrypt}}/test/person",
							"host": [
								"{{Host}}{{DemoEncrypt}}"
							],
							"path": [
								"test",
								"person"
							]
						}
					},
					"response": []
				},
				{
					"name": "[simple-demo-encrypt]脱敏测试模块-测试列表",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"测试返回结果code是否为200,数据是否正常\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.code).to.eql(200);\r",
									"    pm.expect(jsonData.data[0].name).to.eql(\"*三\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Host}}{{DemoEncrypt}}/test/personList",
							"host": [
								"{{Host}}{{DemoEncrypt}}"
							],
							"path": [
								"test",
								"personList"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "variable_key",
			"value": ""
		},
		{
			"key": "datasourceTestId",
			"value": ""
		},
		{
			"key": "baseParamTestId",
			"value": ""
		},
		{
			"key": "S3FileId",
			"value": ""
		},
		{
			"key": "S3NextPageParam",
			"value": ""
		}
	]
}